<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAABeXMwT4dgz7oGDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACNIPQcuV1eWQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAK2OEuFRU4MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJBTt6aQ
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJxZhAAAAAAAAAAAAAAAAAAAAP/+P////B////gP///w
        B///4AP//8AB//+AAf//AAD//gAAf/wAAD/4AAAf8AAAD+AAAAeAAAADAAAAAQAAAAAAAAAAgAAAAMAA
        AAHgAAAD8AAAD/gAAB/8AAA//gAAf/8AAP//gAH//8AD///gB///8A////Af///4P////H//KAAAADAA
        AABgAAAAAQAIAAAAAACACgAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAEAAAABAAABAQAAAQEAAAECAAABAgAAAgIAAAICAAACAgAAAgMAAAMDAAAD
        BAAABAUAAAUGAAAGBwAABggAAAgKAAAKDAAADA8AAA8SAAARFQAAExcAABUaAAAYHQAAGh8AABwiAAAe
        JAAAHyUAACAnAAAhKAAAIikAACMqAAAkKwAAJCwAACYuAAAnLwAAJzAAACgwAAApMQAAKjIAACs0AAAs
        NQAALjcAAC44AAAvOQAAMDoAADI8AAAzPgAANkEAADhEAAA6RgAAPEkAAD9MAABCUAAARVMAAEdVAABI
        VwAASVgAAEpZAABMWwAATl0AAE9gAABSYgAAU2QAAFRmAABVZwAAV2kAAFlsAABbbQAAXG8AAF5xAABg
        cwAAYXUAAGR4AABnfAAAaX8AAGyBAABuhAAAb4YAAHGJAABziwAAdo4AAHmSAAB8lQAAfpcAAH6YAAB/
        mQAAgJoAAIKcAACFnwAAiaQAAIunAACNqQAAjqsAAJCtAACSsAAAlLMAAJe2AACZuAAAm7oAAJy8AACe
        vwAAoMEAAKHCAACixAAApMUAAKXHAACmyAAAqMoAAKnMAACrzgAArM8AAK7RAACw1AAAstcAALXZAAC2
        2wAAuN0AALneAAC64AAAu+EAALzjAAC95AAAvuUAAL7lAAC/5gAAwOcAAMDoAADB6QAAwuoAAMPrAADD
        7AAAxO0AAMXtAADF7gAAxu4AAMbvAADH8AAAyPEAAMnyAADK8wAAyvQAAMv1AADL9QAAzPYAAMz3AADN
        +AAAzfgAAM75AADO+QAAzvkAAM76AADO+gAAzvoAAM76AADP+gAAz/oAAM/6AADP+gAAz/sAAM/7AADP
        +wAA0PsAAND7AADQ+wAA0PsAAND7AADQ+wAA0PsAAND7AADQ+wAA0PsAAND7AADQ/AAA0PwAANH8AADR
        /AAA0f0AANH9AADR/QAA0f0AANH9AADR/QAA0f0AANH9AADR/QAA0f0AANH9AADR/QAA0f0AANL9AALS
        /QAD0v0ABNL9AAXS/QAG0/0ACNP9AArT/QAN1P0ADtT9ABDU/QAS1f0AE9X9ABTV/QAW1v0AGNb9ABvW
        /QAd1/0AH9f9ACLX/QAj1/0AJNj9ACXY/QAn2P0AKdn9ACzZ/QAv2v0AMtr9ADXb/QA32/0AOtz9ADzc
        /QA/3f0AQt39AEXd/QBH3v0ASt79AEzf/QBO3/0AUd/9AFTg/QBX4f0AWuH9AFvh/QBd4v0AX+L9AGDi
        /QBh4v0AY+P9AGXj/QBo5P0Aa+T9AP///wB55v0Af+f+AIjp/gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        APjm6v4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5dDIyNr9AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADezsjAyMjd/wAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAANfNyLrAyMDJ4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAA4sm6mm1YYoa6yd8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADhybeV
        WyM6JUGDssDiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANnJspJVKGGOdDhHh7LJ5QAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANPAsoNBJTkjW5W3yeEAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAADQyLeGYlhtmrrN5QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAA2MjAyLrIus3gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANTI
        wLrIzt4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADSyMjQ5gAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5+b4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD///4f/////////A/////////4B/////////AH////////4AP////////AAf///////4AA////////
        AAB///////4AAD///////AAAH//////4AAAP//////AAAAf/////wAAAA/////+AAAAB/////wAAAAD/
        ///+AAAAAH////wAAAAAP///+AAAAAAf///wAAAAAB///+AAAAAAD///wAAAAAAH//+AAAAAAAP//wAA
        AAAAAf//AAAAAAAA//8AAAAAAAD//4AAAAAAAP//wAAAAAAB///gAAAAAAP///AAAAAAB///+AAAAAAP
        ///8AAAAAB////4AAAAAP////gAAAAB/////AAAAAP////+AAAAB/////8AAAAP/////4AAAB//////w
        AAAf//////gAAD///////AAAf//////+AAD///////8AAf///////4AD////////wAf////////gD///
        //////Af////////+D/////////8f/////8=
</value>
  </data>
</root>