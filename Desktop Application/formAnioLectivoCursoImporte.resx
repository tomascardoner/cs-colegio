<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolstripMain.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAYAAAAHAAAABwAAAAcAAAAHAAAABwAA
        AAcAAAAHAAAABwAAAAcAAAAHAAAABwAAAAcAAAAHAAAABwAAAAcAAAAHAwUGCw0iLC0EJzk8BB4qMAIG
        CA0AAAAHAAAABwAAAAcAAAAGAA0UBAsvQgEAAAAAAAAAAAACAQUcYDaGMade6TSxZPM0sWTzNLFk8zSx
        ZPM0sWTzNLFk8zSxZPM0sWTzNLFk8zSxZPM0sWTzNLFk8zSxZPM0sWTzNLFk8zOyk/Nwyev4RanZ/w2I
        wP8XisL/UrDY+TGnj/M9tZfzZL/N8y+Ww/IGerPxK5TJ2lOx35YZbJUSEDsiUjK2af8ytmn/MrZp/0fB
        ff9o0pv/aNKa/2jSmv9o0pr/aNKa/2jSmv9o0pr/aNKa/2jSmv9o0pr/aNKa/2jSmv9o0pr/NrXL/yWn
        6P8lp+P/DZTT/waOz/8knNz/MKXC/za16f9WvOz/IZzS/wWJxP8hmNH/OqXe/wx5r14XXDZ9MLpu/zC6
        bv8yu3D/ZNSc/0/FhP9Yy47/WMuO/1jLjv9Yy47/WMuO/1jLjv9Yy47/WMuO/1jLjv9Yy47/WMuO/1jL
        jv89u7j/X8X1/0Wv3/8Qksv/CIzJ/z2n2/89qM7/Qbvw/1i97P8qoNT/CYjB/yWUyv9Lrd3/DX24UxZe
        OH0uvXL/Mr92/1vTm/9Ry4z/aNmm/2zcqv9s3Kr/bNyq/2zcqv9s3Kr/bNyq/2zcqv9n2aT/XdOb/2LW
        n/9s3Kr/Zdix/2PL5f9dt+P/G4vC/wuAuv9Apdf/I5zb/wqP0v8RneP/Zcb1/1Gv3f8SisH/DojB/02s
        2/8tnNKjFV86fT3Jhf9g2KP/TsyO/2LZpf9q3a3/at2t/2rdrf9q3a3/at2t/2rdrf9o3az/R8qK/zPA
        dv9W0pn/OMJ6/zrDff9Iybf/JKbo/zCw6/9JuOf/HZTK/xKFv/82ntH/RbnL/0jC3f9xxvD/MJnN/wZ9
        uP8qlcr/Q6vg/xKO0t8UYTx9RNCR/03Pk/9l3q7/Z9+w/2ffsP9n37D/Z9+w/2ffsP9n37D/Z9+w/0LN
        jf89yof/ZN6s/2Hcqv9f2qb/TtOY/ya6hP8Potf/Tb7z/0my4v8Sksr/C43J/yqf2f8wn9n/MbDt/1m9
        7P8inNH/BYjD/yOZ0f87pt7/B4rSihNiPn1C0pT/TtOZ/2Thsv9k4bL/ZOGy/2Thsv9k4bL/ZOGy/2Th
        sv9Z3Kn/KcZ7/1jbp/9H05f/TNac/yvMhf9k4bL/L8iB/zPCuv9syfX/Nqjb/wqPyf8Sj8n/T7Df/xuW
        1P82tvH/QbTp/xOf2/8DlNP/GZjX/zul3f8Kd69QE2Q/fUDUl/9M1Zv/YuK1/2Litf9V2aT/TtCV/0zR
        lv9h4rP/YuK1/0XWnP8myYD/Ms6L/ynLg/9K2aD/QNyi/2Dis/8qy4T/F629/wOY4v8Do+f/DKnq/0G0
        6/8rmtT/E4q8/xiQzf8pp+L/Bqzq/wOs6/8CnuX/AI3d/gJurD0YeEyaPtea/0nXnv9f5Lf/X+S3/0ja
        ov8wzor/RNie/1Deqv9f5Lf/Pdea/yPNhP8qz4r/T96p/17ktv9V4K7/NtSV/yPNhP8gxZP/JLfT/xW5
        4/8xu/H/bcTu/yqZzf8Hhr//JpnP/0Gq3/8cqsn/J8bS/xSrrO4AT3k6AAAAAB6QW7082Jz/R9ig/1zl
        uf9c5bn/R+Cr/z7gp/8836X/WeS2/1zluf8/26H/IdCI/0Tdpf9Q3qv/TNul/yPRif8t1JL/IdCI/yvT
        kP9c5bn/VN+//1DB8v9Nt+j/FZnS/wWMyv8un9f/Pqba/yCvrf9N36z/J8qE/QkgFhIAAAAAFndNljra
        n/9F2qL/Wua7/1rmu/9a5rv/Vea4/1nmuv9a5rv/Wua7/07isf8f04z/Qt6n/0bfqv9D36j/Odug/1Lk
        tP8f04z/Odyh/1rmu/9N28L/BZTh/wKf5v8Dqer/A6bo/wGX4v8Di9r/O8+k/0vhrv8mzIf/JoFZQQAA
        AAAPaEV9ONyh/0Lbov9X6Lz/WOi8/1jovP9Y6Lz/WOi8/1jovP9Y6Lz/WOi8/zHcnv8k2JP/R+Ow/1bn
        u/9O5bX/LNqa/yLXkv9S5rj/WOi8/1fovP85y8n/IL3a/xvD5f8ZvuP/H7jX/znKxv892J3/SeKv/yXO
        iv85wYdzAAAAAA9pRn0v253/TeW1/z3bof9Q5rj/Vem+/1Xpvv9V6b7/Vem+/1Xpvv9V6b7/U+i8/zDe
        of8c2JH/N+Cm/xzYkf8l2pj/Sua1/1Xpvv9V6b7/Vem+/1Xpvv9V6b7/Vem+/1Xpvv9O5bX/Ptui/03l
        tf833qT/JNCM/zvGjaYAAAAADmpHfR3XkP8j2ZX/RuW0/zzcpP9Q6L3/U+q//1Pqv/9T6r//U+q//1Pq
        v/9T6r//U+q//0vnuf9B5LH/Rua1/1Lqv/9T6r//U+q//1Pqv/9T6r//U+q//1Pqv/9T6r//T+e6/z3d
        pf9D5LL/IdiT/x3XkP8m05H/PMmQ2AAAAAAOa0h9HNiS/xzYkv8f2ZT/SOe4/zvepv9I5rb/SOa2/0jm
        tv9I5rb/SOa2/0jmtv9I5rb/SOa2/0jmtv9I5rb/SOa2/0jmtv9I5rb/SOa2/0jmtv9I5rb/SOa2/0jm
        tv863qX/Rue3/x7Zk/8c2JL/HNiS/ybUk/88y5P9KIljDgpUOWIc2ZP/HNmT/xzZk/8w4KX/Sui6/0fm
        tv9H5rb/R+a2/0fmtv9H5rb/R+a2/0fmtv9H5rb/R+a2/0fmtv9H5rb/R+a2/0fmtv9H5rb/R+a2/0fm
        tv9H5rb/R+a2/0vou/8r3qD/HNmT/xzZk/8c2ZP/JtOS/z3Olv81tYRAAQkGDBSgbbkb2pT/G9qU/xva
        lf8d25b/HduW/x3blv8d25b/HduW/x3blv8d25b/HduW/x3blv8d25b/HduW/x3blv8d25b/HduW/x3b
        lv8d25b/HduW/x3blv8d25b/HduW/xvalP8b2pT/G9qU/x/XlP83zZX/PtGa/z7Rmm0AAAABGVc9LT3J
        j/9d1af/Yder/2vbtP9r27T/a9y0/2vctf9r3LX/a9y1/2vctv9r3Lb/Ytmw/0jRoP9Az5r/S9Ki/1/Z
        r/9r3bj/a924/2vduP9r3bj/a924/2Pasf9W1Kf/UtKj/17Yrf9D0Z3/Pc2Y/z7Rm/8/05z/PMuWUgAA
        AAAfa0wCPMyS83Pguf9b1KP/e+O//33kwv995ML/feTC/33kw/995cP/feXD/33lxP995cT/feXE/33l
        xf995cX/feXF/3Xivv9o3LP/Y9qv/2Pbr/9j26//bN+3/3Tjv/9t4bv/YN2y/0HTnv8/053/P9Od+z/T
        nZomgmECAAAAAAAAAAA9zpXCYduv/3Phu/9h2av/at2z/37mxP9+5sX/fubF/37nxf9+58b/febG/3Xj
        v/9o3rT/Y9uw/2PcsP9j3LD/bOC3/3XkwP9t4rz/Yd6z/1Taq/9H1qP/P9Od/D/UndY/1J2iP9Sebza3
        iTwqjWkMAAAAAAAAAAAAAAAAAAAAAD7Ql48+0Jj/QNGa/17csP9u4Lj/aN2z/3bjv/9p3rT/Y9uw/2Pc
        sP9j3LD/bOC3/3Xkv/9u4rz/Yd6z/1Taq/9H1qP/P9Od/T/Undc/1J2kP9SecDa3iT0qjWkMAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOcKOXD7Rmv8+0pr/PtKb/1nbrf9v4bn/a9+3/3Xk
        v/9u4rz/Yd60/1Taq/9H1qP/P9Sd/T/Undg/1J2lP9Secje7iz4qjWkNAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtmHAdP9Kc+j/TnP8/05z/P9Oc/1La
        qv9I1qP/P9Sd/T/Undk/1J2mP9Secze7i0AqkGsOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA+0JtVP9Od1z/U
        ndk/1J2nP9SedDe7i0AqkGsPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////////////////gAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAAAAAAAAAAAAAAAAAIAAAADAAAADwAAAf8AA
        D//AAf//4D////////////////////////8=
</value>
  </data>
</root>